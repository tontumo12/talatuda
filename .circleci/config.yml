version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.12.0
  aws-ecs: circleci/aws-ecs@1.2.0
  aws-cli: circleci/aws-cli@1.2.1
jobs:
  build:
    docker:
      - image: circleci/docker@1.3.0
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          echo "Vietnam1205" | docker login --username tontumo12 --password-stdin
          docker run -d --name db hotel_manager
      - run: docker build -t tontumo12/tunt:api
      - run: docker build -t tontumo12/tunt:web
      - run: docker push tontumo12/tunt:api
      - run: docker push tontumo12/tunt:web
      - persist_to_workspace:
          root: .
          paths:
            - docker-image
  deploy:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: "AKIAZZNE2SHP7TMB7HKL"
          aws-region: "us-east-2"
      - run:
          name: Load docker image
          command: |
            docker load --input workspace/docker-image/image.tar
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECS_CLUSTER_NAME="talatuda-cluster"' >> $BASH_ENV
            echo 'export ECS_SERVICE_NAME="nginx-service-service"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="otani-tunt.dkr.ecr.us-east-2.amazonaws.com/arn:aws:iam::673044926943:user/ci-cd-test:https://app.circleci.com/pipelines/github/tontumo12"' >> $BASH_ENV
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME
      - aws-ecs/update-service:
          family: "${ECS_SERVICE_NAME}"
          cluster-name: "${ECS_CLUSTER_NAME}"
          container-image-name-updates: "container=${ECS_SERVICE_NAME},image-and-tag=${FULL_IMAGE_NAME}"
          container-env-var-updates: "container=nginx-service-service,name=VERSION_INFO,value=https://app.circleci.com/pipelines/github/tontumo12_1,container=nginx-service-service,name=BUILD_DATE,value=\"$(date)\""
          verify-revision-is-deployed: true
      - run:
          name: Test deployment tunt
          command: |
            TARGET_GROUP_ARN=$(aws ecs describe-services --cluster $ECS_CLUSTER_NAME --services $ECS_SERVICE_NAME | jq -r '.services[0].loadBalancers[0].targetGroupArn')
            ELB_ARN=$(aws elbv2 describe-target-groups --target-group-arns $TARGET_GROUP_ARN | jq -r '.TargetGroups[0].LoadBalancerArns[0]')
            ELB_DNS_NAME=$(aws elbv2 describe-load-balancers --load-balancer-arns $ELB_ARN | jq -r '.LoadBalancers[0].DNSName')
            # Test multiple times to verify that the new revision has been deployed across the entire cluster
            for attempt in {1..50}; do
              curl -s --retry 10 http://$ELB_DNS_NAME | grep -E "Hello World!.*${CIRCLE_SHA1}_${CIRCLE_BUILD_NUM}"
            done
workflows:
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build